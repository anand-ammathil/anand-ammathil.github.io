{"version":3,"sources":["webpack:///./src/components/layout.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/pages/404.js"],"names":["Layout","children","className","SEO","site","metaDescription","siteMetadata","description","Helmet","title","titleTemplate","meta","name","content","property","author","NotFoundPage"],"mappings":"sUAYeA,EAJgC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC7C,yBAAKC,UAAU,qBAAqBD,I,wBC8DvBE,EA3DH,WAAM,IACRC,EADQ,OACRA,KAcFC,EAAkBD,EAAKE,aAAaC,YAE1C,OACE,kBAACC,EAAA,EAAD,CACEC,MAAOJ,EAAgBI,MACvBC,cAAa,QAAUN,EAAKE,aAAaG,MACzCE,KAAM,CACJ,CACEC,KAAM,cACNC,QAASR,GAEX,CACES,SAAU,WACVD,QAASR,EAAgBI,OAE3B,CACEK,SAAU,iBACVD,QAASR,GAEX,CACES,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAAST,EAAKE,aAAaS,QAE7B,CACEH,KAAM,gBACNC,QAASR,EAAgBI,OAE3B,CACEG,KAAM,sBACNC,QAASR,OCnDJW,UARM,kBACnB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAKP,MAAM,mBACX,yCACA","file":"component---src-pages-404-js-9355b8d21c83c5cbf2d3.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\ntype DataProps = {\n  children: any\n}\n\nconst Layout: React.FC<PageProps<DataProps>> = ({ children }) => (\n  <div className=\"container mx-auto\">{children}</div>\n)\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { PageProps, useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = site.siteMetadata.description\n\n  return (\n    <Helmet\n      title={metaDescription.title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: metaDescription.title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: metaDescription.title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]}\n    />\n  )\n}\n\nexport default SEO\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n"],"sourceRoot":""}